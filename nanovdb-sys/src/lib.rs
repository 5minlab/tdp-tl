//! Raw FFI symbols generated by bindgen

mod sys {
    include!(concat!(env!("OUT_DIR"), "/bindings.rs"));
}

pub struct BuildGrid {
    ptr: isize,
}

impl std::default::Default for BuildGrid {
    fn default() -> Self {
        Self::new()
    }
}

impl std::ops::Drop for BuildGrid {
    fn drop(&mut self) {
        unsafe { sys::grid_delete(self.ptr) }
    }
}

type ValueType = u16;
pub const LEAF_DIM: usize = 8;
pub const LEAF_SIZE: usize = LEAF_DIM * LEAF_DIM * LEAF_DIM;
pub const NODE1_DIM: usize = 128;

impl BuildGrid {
    pub fn new() -> Self {
        let ptr = unsafe { sys::grid_new() };
        BuildGrid { ptr }
    }

    pub fn get(&self, x: i32, y: i32, z: i32) -> ValueType {
        unsafe { sys::get_value(self.ptr, x, y, z) }
    }

    pub fn set(&self, x: i32, y: i32, z: i32, value: ValueType) {
        unsafe { sys::set_value(self.ptr, x, y, z, value) }
    }

    pub fn add(&self, x: i32, y: i32, z: i32, value: ValueType) -> ValueType {
        unsafe { sys::add_value(self.ptr, x, y, z, value) }
    }

    pub fn iter_init(&self) -> usize {
        unsafe { sys::iter_init(self.ptr) }
    }

    pub fn iter_get(&self, idx: usize, coord: &mut [i32; 3], values: &mut [ValueType; LEAF_SIZE]) {
        unsafe {
            let coord_ptr = coord.as_mut_ptr();
            let values_ptr = values.as_mut_ptr();
            sys::iter_get(idx, coord_ptr, values_ptr)
        }
    }

    pub fn iter2_init(&self) -> usize {
        unsafe { sys::iter2_init(self.ptr) }
    }

    pub fn iter2_get0(&self, idx: usize, coord: &mut [i32; 3]) {
        unsafe {
            let coord_ptr = coord.as_mut_ptr();
            sys::iter2_get0(idx, coord_ptr)
        }
    }
}
